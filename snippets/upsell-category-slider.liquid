{% assign currentProduct = product %}
<div class="upsell-category-recommendation-container-wrapper {{ product_type }}-products">
  <div class="upsell-category-recommendation-title">{{ section.settings.title }}</div>
  <div class="upsell-category-recommendation-subtitle">
    <a href="{{ section.settings.sub-title-url }}"> {{ section.settings['sub-title'] }} </a>
  </div>
  <div
    class="products-grid grid grid--uniform grid--scattered-large-3 grid--scattered-small-2 upsell-category-recommendation-container"
    data-collection-container=""
  >
    {% for product in product_collection.products %}
      {% unless product == currentProduct %}
        {% render 'product-grid-item', product: product %}
      {% endunless %}
      {% if forloop.index == 16 %}
        {% break %}
      {% endif %}
    {% endfor %}
  </div>
</div>

<style>
    /* .upsell-category-recommendation-container > :nth-child(n+16) {
      display: none;
  } */
  .upsell-category-recommendation-container-wrapper.not-loaded {
      width: 100%;
      height: 200px;
      animation: skeleton-loading 1s linear infinite alternate;
  }

  @keyframes skeleton-loading {
      0% {
          background-color: hsl(200, 20%, 95%);
     }
      100% {
          background-color: hsl(200, 20%, 99%);
     }
  }

  .upsell-category-recommendation-container-wrapper {
      max-width: 1300px;
  	margin: 0 auto;
  	padding: 0 40px;
      margin-bottom: 30px;
  }
  .upsell-category-recommendation-container {
      display: flex;
      overflow-x: scroll;
      margin: 32px 24px !important;
      gap: 10px;
    padding: 0 25px;
    margin-right: -20px !important;
    margin-left: -20px !important;
  }
  .upsell-category-recommendation-title {
      color: #1C1C1C;
      font-family: Roboto;
      font-size: 24px;
      font-style: normal;
      font-weight: 600;
      line-height: normal;
      text-align: left;
  }
  .upsell-category-recommendation-subtitle {
      margin-top: 10px;
      color: #000;
      font-family: Roboto Condensed;
      font-size: 17px;
      font-style: normal;
      font-weight: 400;
      line-height: 20px; /* 117.647% */
      text-decoration-line: underline;
  }
  .upsell-category-recommendation-container .grid__item {
      width: 100% !important;
      padding-left: 0px !important;
  }

  .upsell-category-recommendation-container .grid-product__content{
      width: 266px;
      margin-bottom: 32px;
  }

  .upsell-category-recommendation-container .grid-product__title {
      font-size: 16px;
      font-weight: 500;
  }

  .upsell-category-recommendation-container::-webkit-scrollbar {
  background: #EDEDED;
  height: 4px;
  }

  .upsell-category-recommendation-container::-webkit-scrollbar-thumb {
  background: #414141;
  border-radius: 10px;
  height: 4px;
  }

  .upsell-category-recommendation-container::-webkit-scrollbar-button {
  background: black;
  display: none;
  }

  @media screen and (max-width: 768px) {
    .upsell-category-recommendation-container-wrapper {
    	padding: 0 20px;
    }
  }
</style>

<script>
    const dragToScroll = () => {
  	const element = document.querySelector(".upsell-category-recommendation-container");
           let isDown = false,
             startX,
             scrollLeft;

           const notDown = () => {
             isDown = false;

           };
           const onDown = (e) => {
             isDown = true;
             startX = e.pageX - element.offsetLeft;
             scrollLeft = element.scrollLeft;
           };
           const onMoving = (e) => {
             if (!isDown) return;
             e.preventDefault();

             let x = e.pageX - element.offsetLeft;
             let walk = x - startX;
             element.scrollLeft = scrollLeft - walk;
           };

           element.addEventListener("mousedown", onDown);
           element.addEventListener("mousemove", onMoving);
           element.addEventListener("mouseleave", notDown);
           element.addEventListener("mouseup", notDown);
   };
  dragToScroll();
</script>
